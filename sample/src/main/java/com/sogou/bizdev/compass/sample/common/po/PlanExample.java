package com.sogou.bizdev.compass.sample.common.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PlanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public PlanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCpcplanidIsNull() {
            addCriterion("cpcplanid is null");
            return (Criteria) this;
        }

        public Criteria andCpcplanidIsNotNull() {
            addCriterion("cpcplanid is not null");
            return (Criteria) this;
        }

        public Criteria andCpcplanidEqualTo(Long value) {
            addCriterion("cpcplanid =", value, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidNotEqualTo(Long value) {
            addCriterion("cpcplanid <>", value, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidGreaterThan(Long value) {
            addCriterion("cpcplanid >", value, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidGreaterThanOrEqualTo(Long value) {
            addCriterion("cpcplanid >=", value, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidLessThan(Long value) {
            addCriterion("cpcplanid <", value, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidLessThanOrEqualTo(Long value) {
            addCriterion("cpcplanid <=", value, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidIn(List<Long> values) {
            addCriterion("cpcplanid in", values, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidNotIn(List<Long> values) {
            addCriterion("cpcplanid not in", values, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidBetween(Long value1, Long value2) {
            addCriterion("cpcplanid between", value1, value2, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andCpcplanidNotBetween(Long value1, Long value2) {
            addCriterion("cpcplanid not between", value1, value2, "cpcplanid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIspauseIsNull() {
            addCriterion("ispause is null");
            return (Criteria) this;
        }

        public Criteria andIspauseIsNotNull() {
            addCriterion("ispause is not null");
            return (Criteria) this;
        }

        public Criteria andIspauseEqualTo(Integer value) {
            addCriterion("ispause =", value, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseNotEqualTo(Integer value) {
            addCriterion("ispause <>", value, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseGreaterThan(Integer value) {
            addCriterion("ispause >", value, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseGreaterThanOrEqualTo(Integer value) {
            addCriterion("ispause >=", value, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseLessThan(Integer value) {
            addCriterion("ispause <", value, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseLessThanOrEqualTo(Integer value) {
            addCriterion("ispause <=", value, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseIn(List<Integer> values) {
            addCriterion("ispause in", values, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseNotIn(List<Integer> values) {
            addCriterion("ispause not in", values, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseBetween(Integer value1, Integer value2) {
            addCriterion("ispause between", value1, value2, "ispause");
            return (Criteria) this;
        }

        public Criteria andIspauseNotBetween(Integer value1, Integer value2) {
            addCriterion("ispause not between", value1, value2, "ispause");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNull() {
            addCriterion("accountid is null");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNotNull() {
            addCriterion("accountid is not null");
            return (Criteria) this;
        }

        public Criteria andAccountidEqualTo(Long value) {
            addCriterion("accountid =", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotEqualTo(Long value) {
            addCriterion("accountid <>", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThan(Long value) {
            addCriterion("accountid >", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThanOrEqualTo(Long value) {
            addCriterion("accountid >=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThan(Long value) {
            addCriterion("accountid <", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThanOrEqualTo(Long value) {
            addCriterion("accountid <=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidIn(List<Long> values) {
            addCriterion("accountid in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotIn(List<Long> values) {
            addCriterion("accountid not in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidBetween(Long value1, Long value2) {
            addCriterion("accountid between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotBetween(Long value1, Long value2) {
            addCriterion("accountid not between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andRegionIsNull() {
            addCriterion("region is null");
            return (Criteria) this;
        }

        public Criteria andRegionIsNotNull() {
            addCriterion("region is not null");
            return (Criteria) this;
        }

        public Criteria andRegionEqualTo(String value) {
            addCriterion("region =", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotEqualTo(String value) {
            addCriterion("region <>", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThan(String value) {
            addCriterion("region >", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThanOrEqualTo(String value) {
            addCriterion("region >=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThan(String value) {
            addCriterion("region <", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThanOrEqualTo(String value) {
            addCriterion("region <=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLike(String value) {
            addCriterion("region like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotLike(String value) {
            addCriterion("region not like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionIn(List<String> values) {
            addCriterion("region in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotIn(List<String> values) {
            addCriterion("region not in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionBetween(String value1, String value2) {
            addCriterion("region between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotBetween(String value1, String value2) {
            addCriterion("region not between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andCreatedateIsNull() {
            addCriterion("createdate is null");
            return (Criteria) this;
        }

        public Criteria andCreatedateIsNotNull() {
            addCriterion("createdate is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedateEqualTo(Date value) {
            addCriterion("createdate =", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotEqualTo(Date value) {
            addCriterion("createdate <>", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateGreaterThan(Date value) {
            addCriterion("createdate >", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateGreaterThanOrEqualTo(Date value) {
            addCriterion("createdate >=", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateLessThan(Date value) {
            addCriterion("createdate <", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateLessThanOrEqualTo(Date value) {
            addCriterion("createdate <=", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateIn(List<Date> values) {
            addCriterion("createdate in", values, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotIn(List<Date> values) {
            addCriterion("createdate not in", values, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateBetween(Date value1, Date value2) {
            addCriterion("createdate between", value1, value2, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotBetween(Date value1, Date value2) {
            addCriterion("createdate not between", value1, value2, "createdate");
            return (Criteria) this;
        }

        public Criteria andChgdateIsNull() {
            addCriterion("chgdate is null");
            return (Criteria) this;
        }

        public Criteria andChgdateIsNotNull() {
            addCriterion("chgdate is not null");
            return (Criteria) this;
        }

        public Criteria andChgdateEqualTo(Date value) {
            addCriterion("chgdate =", value, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateNotEqualTo(Date value) {
            addCriterion("chgdate <>", value, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateGreaterThan(Date value) {
            addCriterion("chgdate >", value, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateGreaterThanOrEqualTo(Date value) {
            addCriterion("chgdate >=", value, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateLessThan(Date value) {
            addCriterion("chgdate <", value, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateLessThanOrEqualTo(Date value) {
            addCriterion("chgdate <=", value, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateIn(List<Date> values) {
            addCriterion("chgdate in", values, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateNotIn(List<Date> values) {
            addCriterion("chgdate not in", values, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateBetween(Date value1, Date value2) {
            addCriterion("chgdate between", value1, value2, "chgdate");
            return (Criteria) this;
        }

        public Criteria andChgdateNotBetween(Date value1, Date value2) {
            addCriterion("chgdate not between", value1, value2, "chgdate");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionIsNull() {
            addCriterion("is_use_accountregion is null");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionIsNotNull() {
            addCriterion("is_use_accountregion is not null");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionEqualTo(Integer value) {
            addCriterion("is_use_accountregion =", value, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionNotEqualTo(Integer value) {
            addCriterion("is_use_accountregion <>", value, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionGreaterThan(Integer value) {
            addCriterion("is_use_accountregion >", value, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_use_accountregion >=", value, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionLessThan(Integer value) {
            addCriterion("is_use_accountregion <", value, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionLessThanOrEqualTo(Integer value) {
            addCriterion("is_use_accountregion <=", value, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionIn(List<Integer> values) {
            addCriterion("is_use_accountregion in", values, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionNotIn(List<Integer> values) {
            addCriterion("is_use_accountregion not in", values, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionBetween(Integer value1, Integer value2) {
            addCriterion("is_use_accountregion between", value1, value2, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andIsUseAccountregionNotBetween(Integer value1, Integer value2) {
            addCriterion("is_use_accountregion not between", value1, value2, "isUseAccountregion");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNull() {
            addCriterion("start_date is null");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNotNull() {
            addCriterion("start_date is not null");
            return (Criteria) this;
        }

        public Criteria andStartDateEqualTo(Date value) {
            addCriterion("start_date =", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotEqualTo(Date value) {
            addCriterion("start_date <>", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThan(Date value) {
            addCriterion("start_date >", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThanOrEqualTo(Date value) {
            addCriterion("start_date >=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThan(Date value) {
            addCriterion("start_date <", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThanOrEqualTo(Date value) {
            addCriterion("start_date <=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateIn(List<Date> values) {
            addCriterion("start_date in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotIn(List<Date> values) {
            addCriterion("start_date not in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateBetween(Date value1, Date value2) {
            addCriterion("start_date between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotBetween(Date value1, Date value2) {
            addCriterion("start_date not between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andEndDateIsNull() {
            addCriterion("end_date is null");
            return (Criteria) this;
        }

        public Criteria andEndDateIsNotNull() {
            addCriterion("end_date is not null");
            return (Criteria) this;
        }

        public Criteria andEndDateEqualTo(Date value) {
            addCriterion("end_date =", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateNotEqualTo(Date value) {
            addCriterion("end_date <>", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateGreaterThan(Date value) {
            addCriterion("end_date >", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateGreaterThanOrEqualTo(Date value) {
            addCriterion("end_date >=", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateLessThan(Date value) {
            addCriterion("end_date <", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateLessThanOrEqualTo(Date value) {
            addCriterion("end_date <=", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateIn(List<Date> values) {
            addCriterion("end_date in", values, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateNotIn(List<Date> values) {
            addCriterion("end_date not in", values, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateBetween(Date value1, Date value2) {
            addCriterion("end_date between", value1, value2, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateNotBetween(Date value1, Date value2) {
            addCriterion("end_date not between", value1, value2, "endDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cpcplan_0101
     *
     * @mbggenerated do_not_delete_during_merge Mon May 12 17:27:03 GMT+08:00 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cpcplan_0101
     *
     * @mbggenerated Mon May 12 17:27:03 GMT+08:00 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}