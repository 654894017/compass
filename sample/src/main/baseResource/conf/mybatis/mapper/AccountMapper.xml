<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sogou.bizdev.compass.sample.mybatis.masterslave.dao.MybatisAccountDao" >
  <resultMap id="BaseResultMap" type="com.sogou.bizdev.compass.sample.common.po.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    <id column="ACCOUNTID" property="accountId" jdbcType="DECIMAL" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="REGISTDATE" property="registDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    ACCOUNTID, EMAIL, PASSWORD, REGISTDATE
  </sql>
  <select id="getAccountsByAccountIds" resultMap="BaseResultMap" parameterType="com.sogou.bizdev.compass.sample.common.po.AccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getAccountByAccountId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from ACCOUNT
    where ACCOUNTID = #{accountId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteAccount" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    delete from ACCOUNT
    where ACCOUNTID = #{accountId,jdbcType=DECIMAL}
  </delete>
  <insert id="createAccount" parameterType="com.sogou.bizdev.compass.sample.common.po.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    insert into ACCOUNT (ACCOUNTID, EMAIL, 
      PASSWORD, REGISTDATE
      )
    values (#{accountId,jdbcType=DECIMAL}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR},#{registDate,jdbcType=DATE}
      )
  </insert>
  <update id="updateAccount" parameterType="com.sogou.bizdev.compass.sample.common.po.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:56:53 GMT+08:00 2014.
    -->
    update ACCOUNT
    set EMAIL = #{email,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REGISTDATE = #{registDate,jdbcType=DATE}
    where ACCOUNTID = #{accountId,jdbcType=DECIMAL}
  </update>
</mapper>