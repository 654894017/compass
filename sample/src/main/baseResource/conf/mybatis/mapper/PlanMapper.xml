<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sogou.bizdev.compass.sample.mybatis.shard.dao.ShardMybatisPlanDao" >
  <resultMap id="BaseResultMap" type="com.sogou.bizdev.compass.sample.common.po.Plan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    <id column="planid" property="planId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="accountid" property="accountId" jdbcType="BIGINT" />
    <result column="createdate" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    planid, name, accountid, createdate
  </sql>
  <select id="queryPlansByPlanIds" resultMap="BaseResultMap" parameterType="com.sogou.bizdev.compass.sample.common.po.PlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getPlanByPlanId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from plan
    where planid = #{planId,jdbcType=BIGINT}
  </select>
  <delete id="deletePlan" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    delete from plan
    where planid = #{planId,jdbcType=BIGINT}
  </delete>
  <insert id="createPlan" parameterType="com.sogou.bizdev.compass.sample.common.po.Plan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    <!-- insert into plan#suffix (planid, name, ispause,  -->
      insert into plan (planid, name, accountid, createdate)
    values (#{planId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP})
  </insert>   
  <update id="updatePlan" parameterType="com.sogou.bizdev.compass.sample.common.po.Plan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 12 17:27:03 GMT+08:00 2014.
    -->
    update plan
    set name = #{name,jdbcType=VARCHAR},
      accountid = #{accountId,jdbcType=BIGINT},
      createdate = #{createDate,jdbcType=TIMESTAMP}
    where planid = #{planId,jdbcType=BIGINT}
  </update>
</mapper>